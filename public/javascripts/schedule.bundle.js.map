{"version":3,"sources":["webpack:///./jsx/schedule.jsx"],"names":["searchColumns","row","target","key","index","toString","trim","toLowerCase","indexOf","TableRow","props","game","wk","date","split","day","h","v","stad","surf","Component","NFLTable","games","schedule","map","searchText","showColumn","push","gid","Search","handleTextInput","bind","searchTextInput","value","input","Root","handleSearch","state","setState","data","document","getElementById"],"mappings":"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","file":"schedule.bundle.js","sourcesContent":["import React from 'react';\nimport {render} from 'react-dom';\n\nfunction searchColumns(row, target){\n    for (let key in row) {\n        if (key !== 'gid') {\n            let index = row[key].toString().trim().toLowerCase().indexOf(target.trim().toLowerCase());\n            if (index > -1) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nclass TableRow extends React.Component{\n    render () {\n        return (\n            <tr>\n                <td>{this.props.game.wk}</td>\n                <td>{this.props.game.date.split(' ')[0]}</td>\n                <td>{this.props.game.day}</td>\n                <td>{this.props.game.date.split(' ')[1]}</td>\n                <td>{this.props.game.h}</td>\n                <td>{this.props.game.v}</td>\n                <td>{this.props.game.stad}</td>\n                <td>{this.props.game.surf}</td>\n            </tr>\n        )\n    }\n}\n\nclass NFLTable extends React.Component{\n    render () {\n        let games = [];\n        this.props.schedule.map((game) => {\n            if (this.props.searchText.trim()){\n                let showColumn = searchColumns(game, this.props.searchText);\n                if (showColumn){\n                    games.push(<TableRow game={game} key={game.gid}/>)\n                }\n            } else {\n                games.push(<TableRow game={game} key={game.gid}/>)\n            }\n        });\n        return (\n            <table>\n                <thead>\n                <tr>\n                    <th>Week</th>\n                    <th>Date</th>\n                    <th>Day</th>\n                    <th>Time</th>\n                    <th>Home</th>\n                    <th>Away</th>\n                    <th>Stadium</th>\n                    <th>Surface</th>\n                </tr>\n                </thead>\n                <tbody>{games}</tbody>\n            </table>\n        )\n    }\n}\n\nclass Search extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleTextInput = this.handleTextInput.bind(this);\n    }\n    handleTextInput() {\n        this.props.handleTextInput(this.searchTextInput.value);\n    }\n    render () {\n        return (\n            <form>\n                <input type=\"text\"\n                         placeholder=\"Search...\"\n                         value={this.props.searchText}\n                         ref={(input) => this.searchTextInput = input}\n                         onChange={this.handleTextInput}/>\n            </form>\n        )\n    }\n}\n\nclass Root extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.state = {\n            searchText: ''\n        }\n    }\n    handleSearch (input) {\n        if (input.trim()){\n            this.setState({\n                searchText: input\n            });\n        }\n    }\n    render () {\n        return (\n            <div>\n                <Search handleTextInput={this.handleSearch}/>\n                <NFLTable schedule={this.props.data} searchText={this.state.searchText}/>\n            </div>\n        )\n    }\n}\n\nrender(<Root data={data}/>, document.getElementById('root'));\n\n\n// WEBPACK FOOTER //\n// ./jsx/schedule.jsx"],"sourceRoot":""}